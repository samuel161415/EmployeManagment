const express=require('express')
const router=express.Router()

const Employe=require('../model/Employe')
const EmployeCredential=require('../model/EmployeCredential')
router.post('/createAcount',async(req,res)=>{
    //console.log("I am excuted");
    const{FirstName,LastName,PhoneNumber,Email,Gender,DateOfBirth}=req.body; 
    // checking if there is missing input data 
    if(!(FirstName,LastName,PhoneNumber,Email,Gender,DateOfBirth)){
        res.status(400).send("All input is required");
    }
    console.log(Gender);
    //if(Gender.toUpperCase()!=='M'||Gender.toLowerCase()!=='F') res.status(400).send('Gender should be M or F')

    const value=new Employe({
        FirstName:FirstName,
        LastName:LastName,
        PhoneNumber:PhoneNumber,
        Email:Email,
        Gender:Gender,
        DateOfBirth:DateOfBirth
       });

       try{
        const returnValue=await value.save()   // used to save data to database
        console.log("returnValue ",returnValue);
        console.log('returned ', returnValue);
        res.json(returnValue)
      }
    catch(err){
        res.json(err);
    }

})



router.post('/login',async(req,res)=>{

    try {
     
        // Get user input
        const { Email, Password } = req.body;
    

        // Validate user input
        if (!(Email && Password)) {
          res.status(400).send("All input is required");
        }
        // Validate if user exist in our database
        const employe = await Employe.findOne({ Email });
         console.log("hello there");
        if (employe && (await bcrypt.compare(Password, EmployeCredential.Password))) {
          // Create token using user email with id generated by mongodb
          const token = jwt.sign(
            { employe_id: employe._id, Email },
            "key1234",
            {
              expiresIn: "3d",
            }
          );
    
          // save user token
          employe.token = token;
         console.log('token',token);
          // user
          res.status(200).json(employe);
        }
        res.status(400).send("Invalid Credentials");
      } catch (err) {
        res.send(err)
      }
})

module.exports=router